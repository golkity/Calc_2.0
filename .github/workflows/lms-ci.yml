name: CI

on:
  pull_request:

jobs:
  lint:
    name: Lint & Vet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: go vet
        run: go vet ./...

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.57.2

      - name: Run golangci-lint
        run: golangci-lint run --timeout 3m

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      matrix:
        path:
          - pkg/calc
          - service/auth
          - service/api-gateway/internal/handler/test
          - service/calc-orchestrator
          - service/calc-worker

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Run tests in ${{ matrix.path }}
        working-directory: ${{ matrix.path }}
        run: |
          echo "=== Testing $PWD ==="
          go test -v ./... -coverprofile=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ${{ matrix.path }}/coverage.out
          flags: unit-${{ matrix.path }}
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}