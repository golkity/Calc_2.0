name: CI

on:
  workflow_dispatch:

jobs:
  lint:
    name: Lint & Vet
    runs-on: ubuntu-latest

    strategy:
      matrix:
        module:
          - pkg/calc
          - service/auth/internal/http/handler/test
          - service/api-gateway/internal/handler/test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build,/home/runner/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles(matrix.module + "/go.sum") }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      - name: Install dependencies
        working-directory: ${{ matrix.module }}
        run: |
          go mod tidy
          go mod download

      - name: go vet (module ${{ matrix.module }})
        working-directory: ${{ matrix.module }}
        run: go vet ./...

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.57.2

      - name: Run golangci-lint (module ${{ matrix.module }})
        working-directory: ${{ matrix.module }}
        run: golangci-lint run --timeout 3m

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      matrix:
        module:
          - pkg/calc
          - service/auth/internal/http/handler/test
          - service/api-gateway/internal/handler/test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build,/home/runner/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles(matrix.module + "/go.sum") }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      - name: Install dependencies
        working-directory: ${{ matrix.module }}
        run: |
          go mod tidy
          go mod download

      - name: Run tests in ${{ matrix.module }}
        working-directory: ${{ matrix.module }}
        run: |
          echo "=== Testing $PWD ==="
          go test -v ./... -coverprofile=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ${{ matrix.module }}/coverage.out
          flags: unit-${{ matrix.module }}
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}