name: lms-ci

on:
  push:
    branches: [ main, dev-master ]
  pull_request:
    branches: [ main, dev-master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.57.2

      - name: go vet
        run: go vet ./...

      - name: Run golangci-lint
        run: golangci-lint run --timeout 3m

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      matrix:
        pkg:
          - pkg/calc
          - service/auth
          - service/api-gateway/handler/test
          - service/calc-orchestrator
          - service/calc-worker

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Run tests
        working-directory: ${{ matrix.pkg }}
        run: |
          echo "=== Testing $PWD ==="
          go test -v ./... -coverprofile=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ${{ matrix.pkg }}/coverage.out
          flags: unit-${{ matrix.pkg }}
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-push:
    name: Build & Push Docker images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    strategy:
      matrix:
        service:
          - name: api-gateway
            path: service/api-gateway
            image: calc-api-gateway
          - name: auth
            path: service/auth
            image: calc-auth
          - name: calc-orchestrator
            path: service/calc-orchestrator
            image: calc-orchestrator
          - name: calc-worker
            path: service/calc-worker
            image: calc-worker

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push ${{ matrix.service.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.path }}
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service.image }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service.image }}:${{ github.sha }}